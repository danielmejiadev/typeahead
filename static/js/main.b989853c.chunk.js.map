{"version":3,"sources":["helpers/index.js","hooks/useTypeaheadState.js","Typeahead.context.js","components/TypeaheadProvider/index.jsx","hooks/useTypehead.js","components/SearchInput/index.jsx","components/Suggestions/index.jsx","components/TypeaheadContainer/index.jsx","hooks/useOutsideHandlerEffect.js","components/Typeahead/index.jsx","index.js"],"names":["sanitize","value","trim","toLowerCase","useTypeaheadState","list","React","useState","search","setSearch","suggestions","setSuggestions","onSearch","useCallback","event","target","query","querySanitized","filter","item","startsWith","map","highlight","slice","length","rest","calculateSuggestions","selectSuggestion","sugesstion","handleKeyup","which","TypeaheadContext","createContext","TypeaheadProvider","children","Provider","useTypeahead","useContext","SearchInput","className","type","tabIndex","xmlnsXlink","xlinkHref","onChange","placeholder","autoFocus","onKeyUp","xmlns","width","height","display","id","viewBox","d","Suggestions","role","key","onClick","onKeyDown","TypeaheadContainer","containerRef","callback","useRef","useEffect","handleClickOutside","current","contains","document","addEventListener","removeEventListener","useOutsideHandlerEffect","ref","Typeahead","ReactDOM","render","getElementById"],"mappings":"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KAzJM,CACjB,YACA,eACA,OACA,aACA,QACA,QACA,SACA,QACA,iBACA,OACA,aACA,QACA,YACA,YACA,aACA,YACA,QACA,iBACA,WACA,UACA,OACA,WACA,WACA,gBACA,WACA,WACA,YACA,YACA,cACA,iBACA,aACA,aACA,UACA,aACA,eACA,gBACA,gBACA,gBACA,gBACA,aACA,WACA,cACA,UACA,UACA,aACA,YACA,cACA,cACA,UACA,YACA,aACA,OACA,YACA,OACA,OACA,QACA,cACA,WACA,UACA,YACA,SACA,QACA,QACA,WACA,gBACA,YACA,eACA,YACA,aACA,YACA,uBACA,YACA,YACA,aACA,YACA,cACA,gBACA,eACA,iBACA,iBACA,iBACA,cACA,OACA,YACA,QACA,UACA,SACA,mBACA,aACA,eACA,eACA,iBACA,kBACA,oBACA,kBACA,kBACA,eACA,YACA,YACA,WACA,cACA,OACA,UACA,QACA,YACA,SACA,YACA,SACA,gBACA,YACA,gBACA,gBACA,aACA,YACA,OACA,OACA,OACA,aACA,SACA,gBACA,MACA,YACA,YACA,cACA,SACA,aACA,WACA,WACA,SACA,SACA,UACA,YACA,YACA,YACA,OACA,cACA,YACA,MACA,OACA,UACA,SACA,YACA,SACA,QACA,QACA,aACA,SACA,iBAMA+D,SAASQ,eAAe,W","file":"static/js/main.b989853c.chunk.js","sourcesContent":["/**\n * Sanitize string value by cleaning white spaces and sensitve case.\n * @param { string } value The value to clean\n * @returns { string } The value cleaned.\n */\nexport function sanitize(value) {\n  return value\n    .trim()\n    .toLowerCase();\n}\n\n/**\n * Calcalate the suggestions based on a list of data and a given search criteria.\n * @param { Array } list The list of data.\n * @param { string } query The query to filter list.\n * @returns { Array } An array of values filtered into the list, including the highlight text.\n */\nexport function calculateSuggestions(list, query) {\n  const querySanitized = sanitize(query);\n\n  return list\n    .filter((item) => querySanitized && sanitize(item).startsWith(querySanitized))\n    .map((item) => ({\n      value: item,\n      highlight: item.slice(0, querySanitized.length),\n      rest: item.slice(querySanitized.length)\n    }));\n}","// Dependencies\nimport React from 'react';\n\n// Helpers\nimport { calculateSuggestions } from '../helpers';\n\nconst ENTER_CODE = 13;\nconst ESC_CODE = 27;\n\n/**\n * Custom hook to generate the typeahead state required.\n * @param { Array<string> } list The list of values to filter.\n * @returns { Object } The state and actions for given manager.\n */\nexport function useTypeaheadState(list) {\n  const [search, setSearch] = React.useState('');\n  const [suggestions, setSuggestions] = React.useState([]);\n\n  const onSearch = React.useCallback((event) => {\n    const { target: { value } } = event;\n    setSearch(value);\n    setSuggestions(calculateSuggestions(list, value));\n  }, [list]);\n\n  const selectSuggestion = React.useCallback((sugesstion) => {\n    setSearch(sugesstion);\n    setSuggestions([]);\n  }, []);\n\n  const handleKeyup = (event, value) => {\n    if (event.which === ENTER_CODE) {\n      selectSuggestion(value)\n    } else if (event.which === ESC_CODE) {\n      setSuggestions([]);\n    }\n  }\n\n  return { search, onSearch, suggestions, selectSuggestion, handleKeyup };\n}","import React from 'react'\n\nexport const TypeaheadContext = React.createContext({});","// Dependencies\nimport React from 'react';\nimport PropTypes from 'prop-types'\n\n// Hooks\nimport { useTypeaheadState } from '../../hooks/useTypeaheadState';\n\n// Context\nimport { TypeaheadContext } from '../../Typeahead.context';\n\nexport function TypeaheadProvider({ children, list }) {\n  const { search, onSearch, suggestions, selectSuggestion, handleKeyup } = useTypeaheadState(list);\n\n  return (\n    <TypeaheadContext.Provider value={{ search, onSearch, suggestions, selectSuggestion, handleKeyup }}>\n      {children}\n    </TypeaheadContext.Provider>\n  )\n}\n\nTypeaheadProvider.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.string).isRequired,\n  children: PropTypes.node.isRequired,\n}\n\nexport default TypeaheadProvider;","// Dependencies\nimport React from 'react';\n\n// Context\nimport { TypeaheadContext } from '../Typeahead.context';\n\n/**\n * Custom hook to use the typehead context around the app.\n * @returns { Object } The state and actions for given provider.\n */\nexport function useTypeahead() {\n  return React.useContext(TypeaheadContext)\n}\n","// Dependencies\nimport React from 'react';\n\n// Hooks\nimport { useTypeahead } from '../../hooks/useTypehead';\n\n// Stylesz\nimport './styles.css'\n\nexport function SearchInput() {\n  const { search, suggestions, onSearch, handleKeyup } = useTypeahead();\n\n  return (\n    <>\n      <form className=\"search-form\">\n        <button type=\"submit\" className=\"search-button\" tabIndex=\"-1\">\n          <svg className=\"submit-button\">\n            <use xmlnsXlink=\"http://www.w3.org/1999/xlink\" xlinkHref=\"#search\" />\n          </svg>\n        </button>\n        <input\n          value={search}\n          onChange={onSearch}\n          placeholder=\"Search\"\n          type=\"text\"\n          className={suggestions.length === 0 ? 'search-input' : 'highlightText search-input'}\n          autoFocus\n          tabIndex=\"0\"\n          onKeyUp={(event) => handleKeyup(event, search)}\n        />\n      </form>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width={0} height={0} display=\"none\">\n        <symbol id=\"search\" viewBox=\"0 0 32 32\">\n          <path d=\"M 19.5 3 C 14.26514 3 10 7.2651394 10 12.5 C 10 14.749977 10.810825 16.807458 12.125 18.4375 L 3.28125 27.28125 L 4.71875 28.71875 L 13.5625 19.875 C 15.192542 21.189175 17.250023 22 19.5 22 C 24.73486 22 29 17.73486 29 12.5 C 29 7.2651394 24.73486 3 19.5 3 z M 19.5 5 C 23.65398 5 27 8.3460198 27 12.5 C 27 16.65398 23.65398 20 19.5 20 C 15.34602 20 12 16.65398 12 12.5 C 12 8.3460198 15.34602 5 19.5 5 z\" />\n        </symbol>\n      </svg>\n    </>\n  )\n}\n\nexport default SearchInput;","// Dependencies\nimport React from 'react';\n\n// Hooks\nimport { useTypeahead } from '../../hooks/useTypehead';\n\n// Stylesz\nimport './styles.css'\n\nexport function Suggestions() {\n  const { suggestions, selectSuggestion, handleKeyup } = useTypeahead();\n\n  if (suggestions.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"suggestions\">\n      <ul role=\"tablist\">\n        {suggestions.map((item) => (\n          <li\n            role=\"tab\"\n            key={item.value}\n            tabIndex=\"0\"\n            onClick={() => selectSuggestion(item.value)}\n            onKeyDown={(event) => handleKeyup(event, item.value)}\n          >\n            <b>{item.highlight}</b>\n            {item.rest}\n          </li>\n        ))}\n      </ul>\n    </div>\n\n  )\n}\n\nexport default Suggestions;","// Dependencies\nimport React from 'react';\n\n// Hooks\nimport { useTypeahead } from '../../hooks/useTypehead';\nimport { useOutsideHandlerEffect } from '../../hooks/useOutsideHandlerEffect';\n\n// Components\nimport SearchInput from '../SearchInput';\nimport Suggestions from '../Suggestions';\n\n// Styles\nimport './styles.css';\n\nexport function TypeaheadContainer() {\n  const { search, selectSuggestion } = useTypeahead();\n  const containerRef = useOutsideHandlerEffect(() => selectSuggestion(search));\n\n  return (\n    <div className=\"container\" ref={containerRef}>\n      <SearchInput />\n      <Suggestions />\n    </div>\n  )\n}\n\nexport default TypeaheadContainer;","// Dependencies\nimport React from 'react';\n\n/**\n * Custom hook to validate if outside of container ref was clicked.\n * @param { Function } callback The callback to execute when a click was detectede outside.\n * @returns { React.MutableRefObject } A react reference to assing for a wrapper container.\n */\nexport function useOutsideHandlerEffect(callback) {\n  const containerRef = React.useRef(null);\n\n  React.useEffect(() => {\n    function handleClickOutside(event) {\n      const { target } = event;\n\n      if (!containerRef.current?.contains(target)) {\n        callback();\n      }\n    }\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, [containerRef, callback]);\n\n  return containerRef;\n}","// Dependencies\nimport React from 'react';\nimport PropTypes from 'prop-types'\n\n// Components\nimport TypeaheadProvider from '../TypeaheadProvider';\nimport TypeaheadContainer from '../TypeaheadContainer';\n\nexport function Typeahead({ list }) {\n  return (\n    <TypeaheadProvider list={list}>\n      <TypeaheadContainer />\n    </TypeaheadProvider>\n  )\n}\n\nTypeahead.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.string).isRequired,\n}\n\nexport default Typeahead;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Typeahead from './components/Typeahead';\n\nconst colorsList = [\n  \"AliceBlue\",\n  \"AntiqueWhite\",\n  \"Aqua\",\n  \"Aquamarine\",\n  \"Azure\",\n  \"Beige\",\n  \"Bisque\",\n  \"Black\",\n  \"BlanchedAlmond\",\n  \"Blue\",\n  \"BlueViolet\",\n  \"Brown\",\n  \"BurlyWood\",\n  \"CadetBlue\",\n  \"Chartreuse\",\n  \"Chocolate\",\n  \"Coral\",\n  \"CornflowerBlue\",\n  \"Cornsilk\",\n  \"Crimson\",\n  \"Cyan\",\n  \"DarkBlue\",\n  \"DarkCyan\",\n  \"DarkGoldenRod\",\n  \"DarkGray\",\n  \"DarkGrey\",\n  \"DarkGreen\",\n  \"DarkKhaki\",\n  \"DarkMagenta\",\n  \"DarkOliveGreen\",\n  \"DarkOrange\",\n  \"DarkOrchid\",\n  \"DarkRed\",\n  \"DarkSalmon\",\n  \"DarkSeaGreen\",\n  \"DarkSlateBlue\",\n  \"DarkSlateGray\",\n  \"DarkSlateGrey\",\n  \"DarkTurquoise\",\n  \"DarkViolet\",\n  \"DeepPink\",\n  \"DeepSkyBlue\",\n  \"DimGray\",\n  \"DimGrey\",\n  \"DodgerBlue\",\n  \"FireBrick\",\n  \"FloralWhite\",\n  \"ForestGreen\",\n  \"Fuchsia\",\n  \"Gainsboro\",\n  \"GhostWhite\",\n  \"Gold\",\n  \"GoldenRod\",\n  \"Gray\",\n  \"Grey\",\n  \"Green\",\n  \"GreenYellow\",\n  \"HoneyDew\",\n  \"HotPink\",\n  \"IndianRed\",\n  \"Indigo\",\n  \"Ivory\",\n  \"Khaki\",\n  \"Lavender\",\n  \"LavenderBlush\",\n  \"LawnGreen\",\n  \"LemonChiffon\",\n  \"LightBlue\",\n  \"LightCoral\",\n  \"LightCyan\",\n  \"LightGoldenRodYellow\",\n  \"LightGray\",\n  \"LightGrey\",\n  \"LightGreen\",\n  \"LightPink\",\n  \"LightSalmon\",\n  \"LightSeaGreen\",\n  \"LightSkyBlue\",\n  \"LightSlateGray\",\n  \"LightSlateGrey\",\n  \"LightSteelBlue\",\n  \"LightYellow\",\n  \"Lime\",\n  \"LimeGreen\",\n  \"Linen\",\n  \"Magenta\",\n  \"Maroon\",\n  \"MediumAquaMarine\",\n  \"MediumBlue\",\n  \"MediumOrchid\",\n  \"MediumPurple\",\n  \"MediumSeaGreen\",\n  \"MediumSlateBlue\",\n  \"MediumSpringGreen\",\n  \"MediumTurquoise\",\n  \"MediumVioletRed\",\n  \"MidnightBlue\",\n  \"MintCream\",\n  \"MistyRose\",\n  \"Moccasin\",\n  \"NavajoWhite\",\n  \"Navy\",\n  \"OldLace\",\n  \"Olive\",\n  \"OliveDrab\",\n  \"Orange\",\n  \"OrangeRed\",\n  \"Orchid\",\n  \"PaleGoldenRod\",\n  \"PaleGreen\",\n  \"PaleTurquoise\",\n  \"PaleVioletRed\",\n  \"PapayaWhip\",\n  \"PeachPuff\",\n  \"Peru\",\n  \"Pink\",\n  \"Plum\",\n  \"PowderBlue\",\n  \"Purple\",\n  \"RebeccaPurple\",\n  \"Red\",\n  \"RosyBrown\",\n  \"RoyalBlue\",\n  \"SaddleBrown\",\n  \"Salmon\",\n  \"SandyBrown\",\n  \"SeaGreen\",\n  \"SeaShell\",\n  \"Sienna\",\n  \"Silver\",\n  \"SkyBlue\",\n  \"SlateBlue\",\n  \"SlateGray\",\n  \"SlateGrey\",\n  \"Snow\",\n  \"SpringGreen\",\n  \"SteelBlue\",\n  \"Tan\",\n  \"Teal\",\n  \"Thistle\",\n  \"Tomato\",\n  \"Turquoise\",\n  \"Violet\",\n  \"Wheat\",\n  \"White\",\n  \"WhiteSmoke\",\n  \"Yellow\",\n  \"YellowGreen\",\n];\n\n\nReactDOM.render(\n  <Typeahead list={colorsList} />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}